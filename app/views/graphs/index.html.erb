<%= Gon::Base.render_data %>
<div class="row">
  <div class="col-6">
    <button type="button" class="btn btn-info btn-block" data-toggle="modal" data-target="#new-modal">
      新規登録
    </button>
  </div>
  <div class="col-6">
    <button type="button" class="btn btn-info btn-block" data-toggle="modal" data-target="#edit-modal">
      記録の修正
    </button>
  </div>
</div>
<div class="row no-gutters">
  <div class="input-group col-sm-6 pr-sm-3 mt-3">
    <div class="input-group-prepend">
      <span class="input-group-text">開始</span>
    </div>
    <input type="text" id="start-calendar" class="form-control bg-white text-center">
  </div>
  <div class="input-group col-sm-6 pl-sm-3 mt-3">
    <div class="input-group-prepend">
      <span class="input-group-text">終了</span>
    </div>
    <input type="text" id="end-calendar" class="form-control bg-white text-center">
  </div>
</div>
<div class="row">
  <div class="col-6 col-sm-3">
    <input type="button" value="過去１週間" id="a-week-button" class="btn btn-success btn-block mt-3">
  </div>
  <div class="col-6 col-sm-3">
    <input type="button" value="過去２週間" id="two-weeks-button" class="btn btn-success btn-block mt-3">
  </div>
  <div class="col-6 col-sm-3">
    <input type="button" value="過去１ヶ月" id="a-month-button" class="btn btn-success btn-block mt-3">
  </div>
  <div class="col-6 col-sm-3">
    <input type="button" value="過去３ヶ月" id="three-months-button" class="btn btn-success btn-block mt-3">
  </div>
</div>
<canvas id="chart-weight" class="mt-5"></canvas>
<%= render 'modal', action: 'new', title: '新規登録' %>
<html lang=“ja”>
  <head>
    <meta http-equiv="content-language" content="ja">
    <meta name="robots" content="noindex,nofollow">
    <meta charset="UTF-8">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.min.js"></script>
    <title>HTML Sample</title>
  </head>
  <body>
    <p class="mt-4">折れ線グラフが表示されていれば，「Chart.js」の導入はOKです</p>
    <canvas id="line-chart"></canvas>
    ​
    <script>
      // 本来 Javascript をここに書くべきではありません。プログラムの移動方法は後に解説します
      
      // 折れ線グラフのデータ（値を変更するとグラフが変化することを確認してみて下さい）
      let lineLabel = ['1/1', '1/2', '1/4', '1/5', '1/6', '1/7']
      let lineData = [60.3, 61.1, 60.8, null, 60.5, 61.4]
      let barData = [5, 4, 2, 6, 5, 8]
      // 折れ線グラフのオプション
      
      const lineChartData = {
          labels: lineLabel,
          datasets: [
          {
            type: 'line',
              label: '体重(kg)',
              data: lineData,
              backgroundColor: 'rgba(255, 99, 132, 0.2)',
              borderColor: 'rgba(255, 99, 132, 1)',
              borderWidth: 1,
              spanGaps: true,
              yAxisID: 'y-axis-1'
          },
          {
              type: 'bar',
            label: '距離(km)',
            data: barData,
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1,
            yAxisID: 'y-axis-2',
        }
        ]
      }
      
      const lineChartOption = {
          title: {
              display: true,
              text: '折れ線グラフ'
          },
              scales: {
                yAxes: [{
                    id: 'y-axis-1',   // Y軸のID
                    position: 'left', // どちら側に表示される軸か？
                    ticks: {          // スケール
                        suggestedMax: 70,
                        suggestedMin: 50,
                    }
                },
                {
                    id: 'y-axis-2',
                    position: 'right',
                    ticks: {
                        max: 10,
                        min: 0,
                    },
                    gridLines: {
                        display: false,
                    }
                }]
            },
          tooltips: {
              callbacks: {
                  // ホバー（スマホならタップ）時のラベル表示を変更
                  title: function (tooltipItems) {
                      return tooltipItems[0].xLabel.replace(/^(\d+).(\d+)$/, ' $1 月 $2 日')
                  },
                  label: function (tooltipItem) {
                      return '体重: ' + tooltipItem.yLabel + 'kg'
                  }
              }
          }
      }
      
      // 折れ線グラフを表示
      const lineChartContext = document.getElementById("line-chart").getContext('2d')
      new Chart(lineChartContext, {
          type: 'bar',
          data: lineChartData,
          options: lineChartOption
      })
    </script>
  </body>
</html>
